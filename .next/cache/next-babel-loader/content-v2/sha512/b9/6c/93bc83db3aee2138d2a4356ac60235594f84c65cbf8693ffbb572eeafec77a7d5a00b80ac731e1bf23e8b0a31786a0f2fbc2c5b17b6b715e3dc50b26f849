{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\FI ABU DHABI\\\\Desktop\\\\react\\\\next\\\\next_big\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetUpDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://media.cntraveler.com/photos/5a84e860b8ebbd42565cf871/4:3/pass/Dubai_GettyImages-143769640.jpg\",\n    title: \"A First Meetup\",\n    description: \"The meetup description\",\n    address: \"Some Street 5, Some City\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Padate23:Padate23@cluster0.lmdurcw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch for single\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Padate23:Padate23@cluster0.lmdurcw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://media.cntraveler.com/photos/5a84e860b8ebbd42565cf871/4:3/pass/Dubai_GettyImages-143769640.jpg\",\n        title: \"A First Meetup\",\n        description: \"The meetup description\",\n        address: \"Some Street 5, Some City\"\n      }\n    }\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["C:/Users/FI ABU DHABI/Desktop/react/next/next_big/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetUpDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","props","meetupData","id","image","title","description","address"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,uGADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEQ;AAAN,GAA1B,CAA7B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAEA,SAAO;AACLQ,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEV,QADM;AAEVW,QAAAA,KAAK,EACH,uGAHQ;AAIVC,QAAAA,KAAK,EAAE,gBAJG;AAKVC,QAAAA,WAAW,EAAE,wBALH;AAMVC,QAAAA,OAAO,EAAE;AANC;AADP;AADF,GAAP;AAYD;AAED,eAAe/B,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\nconst MeetUpDetails = () => {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://media.cntraveler.com/photos/5a84e860b8ebbd42565cf871/4:3/pass/Dubai_GettyImages-143769640.jpg\"\r\n      title=\"A First Meetup\"\r\n      description=\"The meetup description\"\r\n      address=\"Some Street 5, Some City\"\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Padate23:Padate23@cluster0.lmdurcw.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch for single\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Padate23:Padate23@cluster0.lmdurcw.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({_id: meetupId});\r\n\r\n  client.close();\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupId,\r\n        image:\r\n          \"https://media.cntraveler.com/photos/5a84e860b8ebbd42565cf871/4:3/pass/Dubai_GettyImages-143769640.jpg\",\r\n        title: \"A First Meetup\",\r\n        description: \"The meetup description\",\r\n        address: \"Some Street 5, Some City\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}